// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.org.intersect.dms.catalogue.db;

import au.org.intersect.dms.catalogue.db.DbDataset;
import java.lang.String;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.PostPersist;
import javax.persistence.PostUpdate;
import javax.persistence.PreRemove;
import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.SolrServer;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.apache.solr.common.SolrInputDocument;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;

privileged aspect DbDataset_Roo_SolrSearch {
    
    @Autowired
    transient SolrServer DbDataset.solrServer;
    
    public static QueryResponse DbDataset.search(String queryString) {
        return search(new SolrQuery("dbdataset_solrsummary_t:" + queryString.toLowerCase()));
    }
    
    public static QueryResponse DbDataset.search(SolrQuery query) {
        try {
            return solrServer().query(query);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new QueryResponse();
    }
    
    public static void DbDataset.indexDbDataset(DbDataset dbdataset) {
        List<DbDataset> dbdatasets = new ArrayList<DbDataset>();
        dbdatasets.add(dbdataset);
        indexDbDatasets(dbdatasets);
    }
        
    @Async
    public static void DbDataset.deleteIndex(DbDataset dbdataset) {
        SolrServer solrServer = solrServer();
        try {
            solrServer.deleteById("dbdataset_" + dbdataset.getId());
            solrServer.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    @PostUpdate
    @PostPersist
    private void DbDataset.postPersistOrUpdate() {
        indexDbDataset(this);
    }
    
    @PreRemove
    private void DbDataset.preRemove() {
        deleteIndex(this);
    }
    
    public static final SolrServer DbDataset.solrServer() {
        SolrServer _solrServer = new DbDataset().solrServer;
        if (_solrServer == null) throw new IllegalStateException("Solr server has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return _solrServer;
    }
    
}
