// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.org.intersect.dms.webapp.domain;

import au.org.intersect.dms.webapp.domain.AtomProbeUserMatching;
import au.org.intersect.dms.webapp.domain.StockServer;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect AtomProbeUserMatching_Roo_Finder {
    
    public static TypedQuery<AtomProbeUserMatching> AtomProbeUserMatching.findAtomProbeUserMatchingsByInstrumentAndAtomProbeUsername(StockServer instrument, String atomProbeUsername) {
        if (instrument == null) throw new IllegalArgumentException("The instrument argument is required");
        if (atomProbeUsername == null || atomProbeUsername.length() == 0) throw new IllegalArgumentException("The atomProbeUsername argument is required");
        EntityManager em = AtomProbeUserMatching.entityManager();
        TypedQuery<AtomProbeUserMatching> q = em.createQuery("SELECT AtomProbeUserMatching FROM AtomProbeUserMatching AS atomprobeusermatching WHERE atomprobeusermatching.instrument = :instrument AND atomprobeusermatching.atomProbeUsername = :atomProbeUsername", AtomProbeUserMatching.class);
        q.setParameter("instrument", instrument);
        q.setParameter("atomProbeUsername", atomProbeUsername);
        return q;
    }
    
}
