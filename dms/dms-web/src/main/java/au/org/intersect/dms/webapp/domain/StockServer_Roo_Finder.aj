// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.org.intersect.dms.webapp.domain;

import au.org.intersect.dms.core.domain.InstrumentProfile;
import au.org.intersect.dms.webapp.domain.StockServer;
import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect StockServer_Roo_Finder {
    
    public static TypedQuery<StockServer> StockServer.findStockServersByProtocol(String protocol) {
        if (protocol == null || protocol.length() == 0) throw new IllegalArgumentException("The protocol argument is required");
        EntityManager em = StockServer.entityManager();
        TypedQuery<StockServer> q = em.createQuery("SELECT StockServer FROM StockServer AS stockserver WHERE stockserver.protocol = :protocol", StockServer.class);
        q.setParameter("protocol", protocol);
        return q;
    }
    
    public static TypedQuery<StockServer> StockServer.findStockServersByInstrumentProfile(InstrumentProfile instrumentProfile) {
        if (instrumentProfile == null) throw new IllegalArgumentException("The instrumentProfile argument is required");
        EntityManager em = StockServer.entityManager();
        TypedQuery<StockServer> q = em.createQuery("SELECT StockServer FROM StockServer AS stockserver WHERE stockserver.instrumentProfile = :instrumentProfile", StockServer.class);
        q.setParameter("instrumentProfile", instrumentProfile);
        return q;
    }
    
}
