<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">
       
    <context:property-placeholder properties-ref="workerProperties" ignore-unresolvable="true" system-properties-mode="OVERRIDE"/>

    <import resource="${dms.worker.profile}"/>
    
    <context:component-scan base-package="au.org.intersect.dms.wn" />
    
    <!-- CAMEL : ACTIVEMQ -->

	<bean class="org.apache.activemq.pool.PooledConnectionFactory" id="activemqConnectionPool">
		<constructor-arg>
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<constructor-arg index="0" value="${dms.broker.username}" />
				<constructor-arg index="1" value="${dms.broker.password}" />
				<constructor-arg index="2" value="${dms.broker.url}" />
			</bean>
		</constructor-arg>
	</bean>

    <camel:camelContext id="workerCamelContext">
        <camel:proxy id="jobListenerProxy" serviceInterface="au.org.intersect.dms.core.service.JobListener" serviceUrl="direct:jobListener"/>
        <camel:route>
            <camel:from uri="direct:jobListener"/>
            <camel:threads poolSize="10">
                <camel:to uri="activemq:wn.updates"/>
            </camel:threads>
        </camel:route>
    </camel:camelContext>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig" />
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="activemqConnectionPool" />
        <property name="transacted" value="false" />
        <property name="concurrentConsumers" value="10" />
    </bean>

    <!-- worker beans here -->

    <bean id="dmsWorkerNode" class="au.org.intersect.dms.wn.impl.WorkerNodeImpl">
        <property name="queue" value="${dms.wn.queue}"/>
        <property name="protoMapping">
            <map>
                <entry key="ftp">
                    <bean class="org.apache.commons.pool.impl.GenericKeyedObjectPool">
                        <constructor-arg ref="ftpFactory" />
                        <property name="minEvictableIdleTimeMillis" value="${dms.wn.pool.minEvictableIdleTimeMillis}" />
                        <property name="timeBetweenEvictionRunsMillis" value="${dms.wn.pool.timeBetweenEvictionRunsMillis}" />
                    </bean>
                </entry>
                <entry key="local">
                    <bean class="org.apache.commons.pool.impl.GenericKeyedObjectPool">
                        <constructor-arg ref="localFactory" />
                        <property name="minEvictableIdleTimeMillis" value="${dms.wn.pool.minEvictableIdleTimeMillis}" />
                        <property name="timeBetweenEvictionRunsMillis" value="${dms.wn.pool.timeBetweenEvictionRunsMillis}" />
                    </bean>
                </entry>
                <entry key="hdd">
                    <bean class="org.apache.commons.pool.impl.GenericKeyedObjectPool">
                        <constructor-arg ref="hddFactory" />
                        <property name="minEvictableIdleTimeMillis" value="${dms.wn.pool.minEvictableIdleTimeMillis}" />
                        <property name="timeBetweenEvictionRunsMillis" value="${dms.wn.pool.timeBetweenEvictionRunsMillis}" />
                    </bean>
                </entry>
            </map>
        </property>
        <property name="activeConnectionsCache" ref="cacheWrapper" />
        <property name="copyStrategy" ref="copier" />
        <property name="ingestors" ref="ingestorsMap" />
    </bean>
    
    
    <bean id="copier" class="au.org.intersect.dms.wn.impl.WorkerNodeCopyStrategy" />
    
    <bean id="executorService"
      class="java.util.concurrent.Executors"
      factory-method="newCachedThreadPool"/>
     
    <bean id="ftpFactory" class="au.org.intersect.dms.wn.transports.impl.FtpTransportFactory" />

    <bean id="hddFactory" class="au.org.intersect.dms.wn.transports.impl.HddTransportFactory" />

    <bean id="hddHttpClient" class="au.org.intersect.dms.wn.transports.impl.HddHttpClient">
        <property name="tunnelUrl" value="${dms.wn.tunnelUrl}" />
    </bean>

    <bean id="localFactory" class="au.org.intersect.dms.wn.transports.impl.LocalTransportFactory">
        <property name="rootPath" value="${dms.wn.localRootPath}" />
        <property name="username" value="${dms.wn.local.username}" />
        <property name="password" value="${dms.wn.local.password}" />
     </bean>
     
	<bean id="publicAgent" class="au.org.intersect.dms.encrypt.impl.PublicEncryptAgent">
	    <constructor-arg value="${dms.wn.key.filename}"/>
	</bean>     

</beans>
