#summary DMS's property files

= Location =

If you inspect most of _applicationContext_ files, you will find snippets like the following
{{{
        ...
        <context:property-placeholder
                properties-ref="dmsProperties" ignore-unresolvable="true" />

        <util:properties id="dmsProperties"
                location="file://${dms.config.home}/dms.properties" />
        ...
}}}

The first tag configures in the spring context a resolver for properties. It has *ignore-unresolvable* on, because the application uses the ability of the [http://static.springsource.org/spring/docs/3.0.x/reference/beans.html Spring IoC] container to load multiple XML definitions at once, and as the DMS has different property files for some, then all must ignore properties that don't belong to them.

The second one tells that the required property file for that XML context definition resides in *dms.config.home*, which is a system property. This is the location of all properties files.

In the following sections we describe all the property files and the meaning of each property.

= dms.properties =

  # DB settings: setting for the DMS datasource. Use the default values and configure username and password
{{{
database.url=jdbc\:mysql\://localhost\:3306/dms
database.username=root
database.password=*****
database.driverClassName=com.mysql.jdbc.Driver
}}}

  # Database connections, pool settings; defaults here should be ok.
  _c3p0.idleConnectionTestPeriod_: how often (in seconds) we should check for idle connections; _c3p0.maxIdleTime_: how long (is seconds) connection can be idle before been closed
{{{
c3p0.idleConnectionTestPeriod=1200 
c3p0.maxIdleTime=1800
}}}

  # JMS broker properties. The ActiveMQ instance is secured with username and password. Provide the same username and password as the one for !ActiveMQ.
{{{
dms.broker.url=tcp://localhost:61616
dms.broker.username=dmsclient
dms.broker.password=*********
}}}

  # Apache Solr configuration
  _solr.serverUrl_: URL of the Solr instance. As seen, one can run Apache Solr in a different machine. The default works for development as probably ok for production too; _executor.poolSize_: size of thread pool for Solr.
{{
solr.serverUrl=http\://localhost\:8080/apache-solr-1.4.1
executor.poolSize=10
}}

  # Tunnel URL for the applet.
  _dms.applet.tunnelUrl_: the web application injects this property into the applet to enable communication to the dms-httptunnel. One should use the proper protocol and domain name in a production environment. Again, the default is ok for development. Note that the tunnel is a different web application and, in principle, can be installed in another server (although we haven't tested this scenario); _dms.webapp.key.filename_: also, the web app needs to encrypt the jobId to avoid security attacks (see [TunnelSecurity here] for quick overview of the security measures in place), so provide here the path to the corresponding public key.
{{{
dms.applet.tunnelUrl=https://<your-domain>:8443/dms-httptunnel/tunnel/app
dms.webapp.key.filename=<path-to-public-key-1>
}}}

# keys, replace $CONFIGDIR with path to your config directory

# Publishing reminder email settings
dms.email.server.url=smtp://localhost
dms.email.from=dms@localhost
dms.email.subject=Please publish your datasets
# Send every 6 months on 1 day at 00:00:00
dms.email.schedule=0+0+0+1+1/6+?


#Change to suit the server that dms is hosted on
dms.email.dms.url=https://localhost:8443/dms-web/catalogue/view?url=